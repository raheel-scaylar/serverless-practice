service: service-05-scaylarsst
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws #determines the name of cloud service provider
  runtime: nodejs12.x # determines which platform or language you are using for development
  region: us-east-1 # determines the reigion where you want to deploy your application
  stage: dev #determines it's a development stage (can be developement, deployment, production or staging)
  timeout: 100
  environment:
    DYNAMODB_TABLE: MyTable

plugins:
  - serverless-offline
  - serverless-dynamodb-local

functions:
  hello:
    handler: ./src/handlers/handler.hello
    events:
      - http:
          path: /api/v1
          method: GET
      - http:
          path: /api/v1
          method: POST
      - http:
          path: /api/v1/{id}
          method: PUT
      - http:
          path: /api/v1/{id}
          method: DELETE

  GetItems:
    handler: ./src/handlers/crud-handlers/query-handlers/GetHandler.getItems
    events:
      - http:
          path: /api/v1/items
          method: GET

  PostItem:
    handler: ./src/handlers/crud-handlers/query-handlers/PostHandler.postItem
    events:
      - http:
          path: /api/v1/items
          method: POST

  UpdateItem:
    handler: ./src/handlers/crud-handlers/query-handlers/UpdateHandler.putItem
    events:
      - http:
          path: /api/v1/items/{id}
          method: PUT

  DeleteItem:
    handler: ./src/handlers/crud-handlers/query-handlers/DeleteHandler.deleteItem
    events:
      - http:
          path: /api/v1/items/{id}
          method: DELETE

  ReadUsers:
    handler: ./src/modules/users/endpoints/Read.read
    events:
      - http:
          path: /api/v1/users
          method: GET

  AddUser:
    handler: ./src/modules/users/endpoints/Create.create
    events:
      - http:
          path: /api/v1/users
          method: POST

  UpdateUser:
    handler: ./src/modules/users/endpoints/Update.update
    events:
      - http:
          path: /api/v1/users/{id}
          method: PUT

  DeleteUser:
    handler: ./src/modules/users/endpoints/Delete.remove
    events:
      - http:
          path: /api/v1/users/{id}
          method: DELETE

custom:
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      # sharedDb: true
